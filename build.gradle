buildscript {
    dependencies {
        classpath 'net.jokubasdargis.buildtimer:gradle-plugin:0.3.0'
    }
}

plugins {
    // dependencyUpdates
    id 'com.github.ben-manes.versions' version '0.17.0'
    id 'net.researchgate.release' version '2.7.0'
}

apply plugin: 'net.jokubasdargis.build-timer'

buildTimer {
    reportAbove = 100L
    sort = 'desc'
}

ext {
    javaVersion = '1.8'
    encoding = 'UTF-8'
    checkstyleVersion = '8.10'

    springBootVersion = '2.0.1.RELEASE'
    springFoxVersion = '2.7.0'
    junitVersion = '4.12'
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'
    apply plugin: 'findbugs'

    group = 'com.vgalloy'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    configurations {
        integrationTestCompile.extendsFrom testCompile
        integrationTestRuntime.extendsFrom testRuntime
    }

    sourceSets {
        integrationTest {
            java {
                compileClasspath += main.output + test.output
                runtimeClasspath += main.output + test.output
                srcDir file('src/integration-test/java')
            }
            resources.srcDir file('src/integration-test/resources')
        }
    }

    checkstyle {
        toolVersion = "$checkstyleVersion"
        configFile = rootProject.file('config/checkstyle/checkstyle.xml')
        checkstyleTest.enabled = false
        checkstyleIntegrationTest.enabled = false
    }

    pmd {
        consoleOutput = true
        ruleSetFiles = rootProject.files('config/pmd/pmd.xml')
        pmdTest.enabled = false
        pmdIntegrationTest.enabled = false
    }

    findbugs {
        excludeFilter = file("$rootProject.projectDir/config/findbugs/findbugs-exception-filter.xml")
        findbugsTest.enabled = false
        findbugsIntegrationTest.enabled = false
    }

    compileJava {
        sourceCompatibility = "$javaVersion"
        targetCompatibility = "$javaVersion"
        options.encoding = "$encoding"
        options.compilerArgs = ['-Xlint:all', '-Werror']
    }

    compileTestJava {
        sourceCompatibility = "$javaVersion"
        targetCompatibility = "$javaVersion"
        options.encoding = "$encoding"
        options.compilerArgs = ['-Xlint:all', '-Werror']
    }

    compileIntegrationTestJava {
        sourceCompatibility = "$javaVersion"
        targetCompatibility = "$javaVersion"
        options.encoding = "$encoding"
        options.compilerArgs = ['-Xlint:all', '-Werror']
    }

    task integrationTest(type: Test) {
        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
    }

    integrationTest.mustRunAfter test
    check.dependsOn integrationTest
}
